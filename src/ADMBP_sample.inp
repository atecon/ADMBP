clear
set verbose off
set seed 1234

include ADMBP.gfn

open AWM.gdt --quiet

# Construct some series and lists
series inc = ln(YER)
series c = ln(PCR)
series w = ln(WLN/PCD)
list xlist = inc w
list rxlist = const time
list Lall = c xlist rxlist

smpl Lall --no-missing   # avoid missing values

# ARDL parameters
scalar pqmax = 4
scalar condARDL = TRUE
scalar infocrit = 1
# Bootstrap and confidence interval parameters
scalar horiz = 40
scalar cilevel = 0.1
scalar btype = 4
scalar bootrep = 1000
scalar shocktype = 1

#------------------------
# Set up the base bundle
#------------------------
bundle b = setARDL(c, xlist, rxlist, pqmax, infocrit,\
    condARDL, shocktype, btype, bootrep, horiz, cilevel)
printf "\nError status = %d.\n", b.error

# Determine the optimal lag length (optional)
lagselectARDL(&b)

# Compute bootstrap dynamic multipliers
runARDL(&b)

# print b
printf "\nError status = %d.\n", b.error


# Compute bootstrap error-correction coeff. +
# long-run multipliers based on ARDL
LRbeta(&b)
matrix LRinc = b.LRbeta_inc
print LRinc


# Compute bootstrap error-correction term
# y - bx = z based on bootstrap median value of b
ECterm(&b)
series ECM = b.ECM		# unrestricted constant
series ECMrc = b.ECMrc	# restricted const.
scatters ECM ECMrc --with-lines --output=display

# Plot multipliers
bundle opts = _(title = "Response of c to shock in inc",
                xlabel = "Horizon", ylabel = "Response")
irfARDL(b.DM_inc, opts)


/* Activate if wished
list Lplot = Lall - rxlist
strings names_variables = varnames(Lplot)
loop foreach i Lplot -q
    string shock = "$i"
    bundle opts = _(title = sprintf("Shock of %s on c", "$i"))

    # Plot the bootstrap median and confidence interval of
    # the response of y on a change in "shock"
    irfARDL(b["DM_@shock"], opts)

    # Plot ALL bootstrap dynamic multipliers of the response of
    irfARDL(b["DMraw_@shock"])
endloop
*/
